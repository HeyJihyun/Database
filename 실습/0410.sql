-- DAY10 P16.실전문제 1
  SELECT M.INVOICE_NO
       , TO_CHAR(M.OUTBOUND_DATE, 'YYYY-MM-DD')
       , M.OUT_TYPE_DIV
       , D.LINE_NO
       , D.ITEM_CD
       , I.ITEM_NM
       , D.ORDER_QTY
    FROM LO_OUT_M M 
    JOIN LO_OUT_D D    ON    M.INVOICE_NO = D.INVOICE_NO
    JOIN CM_ITEM I     ON       I.ITEM_CD = D.ITEM_CD
   WHERE M.INVOICE_NO  IN ('346724703834', '346724722535', '346724717915')
   ORDER BY M.INVOICE_NO, D.LINE_NO; 

-- DAY10 P17.실전문제 2
  SELECT 
         M.INVOICE_NO
        ,M.OUTBOUND_DATE
        ,M.OUT_TYPE_DIV
        ,M.TEMP_DIV
        ,D.LINE_NO
        ,I.ITEM_CD
        ,I.ITEM_NM
        ,D.ORDER_QTY
        ,C.CODE_NM AS TEMP_NM
        ,C2.CODE_NM AS OUT_TYPE_NM
    FROM LO_OUT_M M JOIN LO_OUT_D D  ON D.INVOICE_NO = M.INVOICE_NO
                    JOIN CM_ITEM  I  ON I.ITEM_CD    = D.ITEM_CD
                    JOIN CS_CODE  C  ON C.CODE_GRP   = 'LDIV01'    
                                    AND C.CODE_CD    =  M.TEMP_DIV
                    JOIN CS_CODE  C2 ON C2.CODE_GRP  = 'LDIV03'    
                                    AND C2.CODE_CD   =  M.OUT_TYPE_DIV
   WHERE M.INVOICE_NO  IN ('346724703834', '346724722535', '346724717915')
   ORDER BY M.INVOICE_NO, D.LINE_NO; 


-- DAY11 P3.실전문제 1
  SELECT *
    FROM (
         SELECT --+ ORDERED USE_NL(D) 
               M.INVOICE_NO,
               OUTBOUND_NO,
               OUTBOUND_BATCH,
               ITEM_CD,
               ITEM_NM,
               ORDER_QTY
          FROM LO_OUT_M M
               JOIN LO_OUT_D D ON D.INVOICE_NO = M.INVOICE_NO
         WHERE OUTBOUND_DATE BETWEEN '2019-09-03' AND '2019-09-10'
           AND ITEM_NM LIKE '%골뱅이%'
         ORDER BY ORDER_QTY DESC
        )
   WHERE ROWNUM <= 5;
 
-- DAY11 P4.실전문제 2
  SELECT D.ITEM_CD,
         I.ITEM_NM,
         SUM(D.ORDER_QTY) AS ORDER_QTY
    FROM LO_OUT_M M JOIN LO_OUT_D D ON D.INVOICE_NO = M.INVOICE_NO
                    JOIN CM_ITEM I ON I.ITEM_CD = D.ITEM_CD
   WHERE OUTBOUND_DATE BETWEEN '2019-09-03' AND '2019-09-10'
     AND OUT_BOX_DIV = 'D5' 
   GROUP BY D.ITEM_CD, I.ITEM_NM
   ORDER BY ORDER_QTY DESC;
   
  SELECT L1.ITEM_CD,
    C1.ITEM_NM,
    L1.ORDER_QTY
  FROM
    (
    SELECT M2.ITEM_CD,
           SUM(M2.ORDER_QTY) AS ORDER_QTY
      FROM LO_OUT_M M1
      JOIN LO_OUT_D M2 ON M2.INVOICE_NO = M1.INVOICE_NO
     WHERE M1.OUTBOUND_DATE BETWEEN '2019-09-03' AND '2019-09-10'
       AND M1.OUT_BOX_DIV = 'D5'
     GROUP BY M2.ITEM_CD
    ) L1
  JOIN CM_ITEM C1
  ON C1.ITEM_CD = L1.ITEM_CD
  ORDER BY L1.ORDER_QTY DESC;
   
 -- DAY11 P5.실전문제 3  
  SELECT M.INVOICE_NO,
         OUTBOUND_DATE,
         OUT_TYPE_DIV,
         LINE_NO,
         D.ITEM_CD,
         D.ITEM_NM,
         ORDER_QTY,
         NVL(C.CODE_NM,'Failed...') AS TEMP_NM,
         C2.CODE_NM AS OUT_TYPE_NM
    FROM LO_OUT_M M 
        JOIN LO_OUT_D D    ON  D.INVOICE_NO = M.INVOICE_NO
        JOIN CM_ITEM  I    ON  I.ITEM_CD    = D.ITEM_CD
        LEFT OUTER JOIN CS_CODE  C    ON  C.CODE_GRP   = 'LDIV011'    
                                     AND C.CODE_CD     =  M.TEMP_DIV
                    JOIN CS_CODE  C2  ON C2.CODE_GRP   = 'LDIV03'    
                                     AND C2.CODE_CD    =  M.OUT_TYPE_DIV
  WHERE M.INVOICE_NO IN ('346724703834', '346724722535', '346724717915')
  ORDER BY M.INVOICE_NO,
           LINE_NO;
           
   
 -- DAY11 P6.실전문제 4 
 SELECT --+ ORDERED USE_NL(D)
        OUTBOUND_DATE AS OUT_DATE, NVL(SUM(ORDER_QTY), 0) AS QTY
   FROM (
         SELECT TO_DATE('2019-09-01','YYYY-MM-DD') + LEVEL - 1 AS OUT_DATE
         FROM dual 
         CONNECT BY LEVEL <= (TO_DATE('2019-09-19','YYYY-MM-DD')
                            - TO_DATE('2019-09-01','YYYY-MM-DD') + 1) 
        )D2
          LEFT OUTER JOIN    LO_OUT_M M ON M.OUTBOUND_DATE = D2.OUT_DATE
          LEFT OUTER JOIN LO_OUT_D D    ON  D.INVOICE_NO = M.INVOICE_NO
  WHERE OUTBOUND_DATE BETWEEN TO_CHAR(TO_DATE(:DATE1,'YYYY-MM-DD'), 'YYYY-MM')||'01' AND :DATE1
  GROUP BY OUTBOUND_DATE
  ORDER BY OUT_DATE;
  


  SELECT DD.OUT_DATE, NVL(QTY,0) AS QTY
    FROM (
          SELECT TO_DATE(TO_CHAR(TO_DATE(:DATE1,'YYYY-MM-DD'), 'YYYY-MM')||'01','YYYY-MM-DD') + LEVEL - 1 AS OUT_DATE
            FROM DUAL 
         CONNECT BY LEVEL <= (TO_DATE(:DATE1,'YYYY-MM-DD') 
                            - TO_DATE(TO_CHAR(TO_DATE(:DATE1,'YYYY-MM-DD'), 'YYYY-MM')||'01','YYYY-MM-DD') + 1)
        ) DD 
    LEFT JOIN (
                SELECT --+ ORDERED USE_NL(D) INDEX(D LO_OUT_D_IDXPK)
                       OUTBOUND_DATE          AS OUT_DATE, 
                       SUM(ORDER_QTY) AS QTY
                  FROM LO_OUT_M M JOIN LO_OUT_D D    ON  D.INVOICE_NO = M.INVOICE_NO
                 WHERE OUTBOUND_DATE BETWEEN TO_CHAR(TO_DATE(:DATE1,'YYYY-MM-DD'), 'YYYY-MM')||'01' AND :DATE1
                 GROUP BY OUTBOUND_DATE
                )M2 ON M2.OUT_DATE = DD.OUT_DATE
  ORDER BY DD.OUT_DATE;

--------
 -- DAY12 P3.실전문제 1
SELECT INVOICE_NO,     LINE_NO,    ITEM_CD,
       ITEM_NM,        ORDER_QTY,
       SUM(ORDER_QTY) OVER(PARTITION BY INVOICE_NO ORDER BY LINE_NO) AS ACC_ORDERY_QTY
  FROM LO_OUT_D
 WHERE INVOICE_NO IN ('346724703845','346724706214');
---------------

SELECT INVOICE_NO,   LINE_NO,   ITEM_CD,   ITEM_NM,   ORDER_QTY,
       SUM(ACC_ORDER_QTY) AS ACC_ORDER_QTY
  FROM (
        SELECT M1.INVOICE_NO,   M1.LINE_NO,   M1.ITEM_CD,   M1.ITEM_NM,    M1.ORDER_QTY,
                M2.LINE_NO   AS ACC_LINE_NO,
                M2.ORDER_QTY AS ACC_ORDER_QTY
        FROM (
              SELECT INVOICE_NO,     LINE_NO,     ITEM_CD,    ITEM_NM,     ORDER_QTY
                 FROM LO_OUT_D
                WHERE INVOICE_NO IN ('346724703845','346724706214')
             ) M1
        JOIN (
              SELECT INVOICE_NO,     LINE_NO,     ITEM_CD,    ITEM_NM,     ORDER_QTY
                 FROM LO_OUT_D
                WHERE INVOICE_NO IN ('346724703845','346724706214')
             ) M2 ON M2.INVOICE_NO = M1.INVOICE_NO
                  AND M2.LINE_NO  <= M1.LINE_NO
        )L1
GROUP BY INVOICE_NO, LINE_NO, ITEM_CD,  ITEM_NM,  ORDER_QTY; 
   
  -- DAY12 P5.실전문제 3  
SELECT L1.INVOICE_NO, L1.LINE_NO, L1.ITEM_CD, L1.ITEM_NM, L1.ORDER_QTY, L2.ORDER_QTY
  FROM (
        SELECT INVOICE_NO, LINE_NO, ITEM_CD, ITEM_NM, ORDER_QTY
          FROM ER_OUT
         WHERE OUTBOUND_DATE = '2019-09-03'
           AND OUTBOUND_BATCH = 046
           AND ITEM_NM LIKE '%한입떡갈비%'
        )L1 
    LEFT JOIN (
                SELECT M2.INVOICE_NO, M2.LINE_NO, M2.ITEM_CD, M2.ITEM_NM , M2.ORDER_QTY
                  FROM LO_OUT_M M1 JOIN LO_OUT_D M2 ON M2.INVOICE_NO = M1.INVOICE_NO AND M2.ITEM_NM LIKE '%한입떡갈비%'
                 WHERE OUTBOUND_DATE = '2019-09-03'
                   AND OUTBOUND_BATCH = 046
                ) L2 ON L2.INVOICE_NO = L1.INVOICE_NO AND L2.LINE_NO = L1.LINE_NO
  WHERE L2.INVOICE_NO IS NULL
  ORDER BY L1.INVOICE_NO, L2.LINE_NO;
  
-- DAY00 실전문제1
SELECT OUTBOUND_DATE, INVOICE_NO, WORK_SEQ
  FROM LO_OUT_M
 WHERE OUTBOUND_DATE BETWEEN '2019-06-03' AND '2019-06-04'
   AND SET_TYPE_CD = 000581225
   AND SET_QTY = 3
 ORDER BY CASE TO_NUMBER(:SORT_TYPE) WHEN 1  THEN  WORK_SEQ 
                                     WHEN 2  THEN -WORK_SEQ END, INVOICE_NO;
 
  
-- DAY00 실전문제2
SELECT INVOICE_NO, LINE_NO, ITEM_NM
  FROM LO_OUT_D
 WHERE INVOICE_NO = '346724704405'
 ORDER BY CASE TO_NUMBER(:SORT_TYPE) WHEN 1 THEN ITEM_NM END ASC, 
          CASE TO_NUMBER(:SORT_TYPE) WHEN 2 THEN ITEM_NM END DESC;
          
          
-- DAY13. 실전문제1
SELECT --+ ORDERED USE_NL(D) INDEX(D LO_OUT_D_IDXPK)
      OUTBOUND_DATE, SUM(ORDER_QTY) AS SUM_QTY
  FROM LO_OUT_M M JOIN LO_OUT_D D ON D.INVOICE_NO = M.INVOICE_NO
 WHERE OUTBOUND_DATE BETWEEN '2019-09-01' AND '2019-09-30'
 GROUP BY OUTBOUND_DATE
 ORDER BY SUM_QTY DESC;
 
          
-- DAY13. 실전문제2
SELECT --+ ORDERED USE_NL(D) INDEX(D LO_OUT_D_IDXPK)
       TO_CHAR(OUTBOUND_DATE,'DAY') AS DAY, SUM(ORDER_QTY)
  FROM LO_OUT_M M JOIN LO_OUT_D D ON D.INVOICE_NO = M.INVOICE_NO
 WHERE OUTBOUND_DATE BETWEEN '2019-09-01' AND '2019-09-30'
 GROUP BY TO_CHAR(OUTBOUND_DATE,'DAY'), TO_CHAR(OUTBOUND_DATE,'D')
 ORDER BY TO_CHAR(OUTBOUND_DATE,'D');
 
SELECT --+ ORDERED USE_NL(D) INDEX(D LO_OUT_D_IDXPK)
       NVL(SUM(CASE TO_CHAR(OUTBOUND_DATE,'D') WHEN '1' THEN ORDER_QTY END),0) AS SUN,
       NVL(SUM(CASE TO_CHAR(OUTBOUND_DATE,'D') WHEN '2' THEN ORDER_QTY END),0) AS MON,
       NVL(SUM(CASE TO_CHAR(OUTBOUND_DATE,'D') WHEN '3' THEN ORDER_QTY END),0) AS TUE,
       NVL(SUM(CASE TO_CHAR(OUTBOUND_DATE,'D') WHEN '4' THEN ORDER_QTY END),0) AS WED,
       NVL(SUM(CASE TO_CHAR(OUTBOUND_DATE,'D') WHEN '5' THEN ORDER_QTY END),0) AS THU,
       NVL(SUM(CASE TO_CHAR(OUTBOUND_DATE,'D') WHEN '6' THEN ORDER_QTY END),0) AS FRI,
       NVL(SUM(CASE TO_CHAR(OUTBOUND_DATE,'D') WHEN '7' THEN ORDER_QTY END),0) AS SAT 
  FROM LO_OUT_M M JOIN LO_OUT_D D ON D.INVOICE_NO = M.INVOICE_NO
 WHERE OUTBOUND_DATE BETWEEN '2019-09-01' AND '2019-09-30';

SELECT SUM, MON, TUE, WED, THU, FRI, SAT
  FROM (
        SELECT --+ ORDERED USE_NL(D) INDEX(D LO_OUT_D_IDXPK)
               TO_CHAR(M.OUTBOUND_DATE, 'D') AS DY,
               SUM(D.ORDER_QTY) AS ORDER_QTY
          FROM LO_OUT_M M JOIN LO_OUT_D D ON D.INVOICE_NO = M.INVOICE_NO
         WHERE OUTBOUND_DATE BETWEEN '2019-09-01' AND '2019-09-30'
         GROUP BY TO_CHAR(M.OUTBOUND_DATE, 'D')
       )
 PIVOT( SUM(ORDER_QTY) FOR DY IN(1 AS SUM, 2 AS MON, 3 AS TUE, 4 AS WED, 5 AS THU, 6 AS FRI, 7 AS SAT));
         
          
-- DAY13. 실전문제3
SELECT --+ ORDERED USE_NL(D) INDEX(D LO_OUT_D_IDXPK)
       SUM(CASE TO_CHAR(OUTBOUND_DATE,'MM') WHEN '01' THEN ORDER_QTY END) AS M01,
       SUM(CASE TO_CHAR(OUTBOUND_DATE,'MM') WHEN '02' THEN ORDER_QTY END) AS M02,
       SUM(CASE TO_CHAR(OUTBOUND_DATE,'MM') WHEN '03' THEN ORDER_QTY END) AS M03,
       SUM(CASE TO_CHAR(OUTBOUND_DATE,'Q')  WHEN '1'  THEN ORDER_QTY END) AS Q1,
       SUM(CASE TO_CHAR(OUTBOUND_DATE,'MM') WHEN '06' THEN ORDER_QTY END) AS M06,
       SUM(CASE TO_CHAR(OUTBOUND_DATE,'Q')  WHEN '2'  THEN ORDER_QTY END) AS Q2,
       SUM(CASE TO_CHAR(OUTBOUND_DATE,'MM') WHEN '07' THEN ORDER_QTY END) AS M07,
       SUM(CASE TO_CHAR(OUTBOUND_DATE,'MM') WHEN '08' THEN ORDER_QTY END) AS M08,
       SUM(CASE TO_CHAR(OUTBOUND_DATE,'MM') WHEN '09' THEN ORDER_QTY END) AS M09,
       SUM(CASE TO_CHAR(OUTBOUND_DATE,'Q')  WHEN '3'  THEN ORDER_QTY END) AS Q3,
       SUM(CASE TO_CHAR(OUTBOUND_DATE,'MM') WHEN '10' THEN ORDER_QTY END) AS M10,
       SUM(CASE TO_CHAR(OUTBOUND_DATE,'MM') WHEN '11' THEN ORDER_QTY END) AS M11,
       SUM(CASE TO_CHAR(OUTBOUND_DATE,'MM') WHEN '12' THEN ORDER_QTY END) AS M12,
       SUM(CASE TO_CHAR(OUTBOUND_DATE,'Q')  WHEN '4'  THEN ORDER_QTY END) AS Q4
  FROM LO_OUT_M M JOIN LO_OUT_D D ON D.INVOICE_NO = M.INVOICE_NO
 WHERE OUTBOUND_DATE BETWEEN '2019-01-01' AND '2019-12-31';
           
-- DAY13. 실전문제4
SELECT --+ ORDERED USE_NL(D) INDEX(D LO_OUT_D_IDXPK)
       ITEM_CD, ITEM_NM, SUM(ORDER_QTY) AS SUM_QTY
  FROM LO_OUT_M M JOIN LO_OUT_D D ON D.INVOICE_NO = M.INVOICE_NO
 WHERE OUTBOUND_DATE BETWEEN '2019-06-01' AND '2019-6-30'
   AND ITEM_NM LIKE '%참치%'
 GROUP BY ITEM_CD, ITEM_NM
 ORDER BY SUM_QTY DESC;
 
 
SELECT RNUM, ITEM_CD, ITEM_NM, SUM(SUM_QTY) AS SUM_QTY
 FROM (
        SELECT CASE WHEN ROWNUM <= 5  THEN ROWNUM ELSE 0 END AS RNUM,
               CASE WHEN ROWNUM <= 5  THEN ITEM_CD ELSE '99999' END AS ITEM_CD, 
               CASE WHEN ROWNUM <= 5  THEN ITEM_NM ELSE 'TOP5제외 합계' END AS ITEM_NM, 
               SUM_QTY
          FROM(
                SELECT --+ ORDERED USE_NL(D) INDEX(D LO_OUT_D_IDXPK)
                       ITEM_CD, ITEM_NM, SUM(ORDER_QTY) AS SUM_QTY
                  FROM LO_OUT_M M JOIN LO_OUT_D D ON D.INVOICE_NO = M.INVOICE_NO
                 WHERE OUTBOUND_DATE BETWEEN '2019-06-01' AND '2019-6-30'
                   AND ITEM_NM LIKE '%참치%'
                 GROUP BY ITEM_CD, ITEM_NM
                 ORDER BY SUM_QTY DESC
               )
       )
 GROUP BY RNUM, ITEM_CD, ITEM_NM
 ORDER BY CASE WHEN RNUM != 0 THEN 1 ELSE 2 END, RNUM ;
 

SELECT CASE WHEN ROWNUM <= 5  THEN ROWNUM ELSE 0                 END AS RNUM,
       CASE WHEN ROWNUM <= 5  THEN ITEM_CD ELSE '99999'          END AS ITEM_CD, 
       CASE WHEN ROWNUM <= 5  THEN ITEM_NM ELSE 'TOP5제외 합계'  END AS ITEM_NM, 
       SUM(SUM_QTY)
  FROM(
        SELECT --+ ORDERED USE_NL(D) INDEX(D LO_OUT_D_IDXPK)
               ITEM_CD, ITEM_NM, SUM(ORDER_QTY) AS SUM_QTY
          FROM LO_OUT_M M JOIN LO_OUT_D D ON D.INVOICE_NO = M.INVOICE_NO
         WHERE OUTBOUND_DATE BETWEEN '2019-06-01' AND '2019-6-30'
           AND ITEM_NM LIKE '%참치%'
         GROUP BY ITEM_CD, ITEM_NM
         ORDER BY SUM_QTY DESC
       ) 
 GROUP BY CASE WHEN ROWNUM <= 5  THEN ROWNUM  ELSE 0               END,
          CASE WHEN ROWNUM <= 5  THEN ITEM_CD ELSE '99999'         END, 
          CASE WHEN ROWNUM <= 5  THEN ITEM_NM ELSE 'TOP5제외 합계' END
 ORDER BY CASE WHEN RNUM != 0 THEN 1 ELSE 2 END, RNUM ;
 

-- DAY14. 실전문제 1
SELECT OUTBOUND_DATE, SUM(ORDER_QTY)
  FROM LO_OUT_M M JOIN LO_OUT_D D ON D.INVOICE_NO = M.INVOICE_NO
 WHERE OUTBOUND_DATE BETWEEN '2019-09-01' AND '2019-9-30'
 GROUP BY OUTBOUND_DATE
 ORDER BY OUTBOUND_DATE;
 
SELECT TO_CHAR(OUTBOUND_DATE, 'DY'),
       MAX(SUM_QTY),
       CASE WHEN THEN END
 FROM(
       SELECT OUTBOUND_DATE, SUM(ORDER_QTY) AS SUM_QTY
        FROM LO_OUT_M M JOIN LO_OUT_D D ON D.INVOICE_NO = M.INVOICE_NO
       WHERE OUTBOUND_DATE BETWEEN '2019-09-01' AND '2019-9-30'
       GROUP BY OUTBOUND_DATE
       ORDER BY OUTBOUND_DATE
     )
GROUP BY TO_CHAR(OUTBOUND_DATE, 'DY');
 
 
 SELECT M1.DAYY, OUTBOUND_DATE, MAX_QTY
   FROM (
         
        ) M1 
   JOIN ( --+ ORDERED USE_NL(D) INDEX(D LO_OUT_D_IDXPK)
         
        ) M2 ON M2.DAYY = M1.DAYY AND M2.MAX_QTY = M1.ORDER_QTY
 ORDER BY TO_CHAR(OUTBOUND_DATE,'D');
        